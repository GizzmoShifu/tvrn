name: Release TVRN

on:
  push:
    tags:
      - '*.*.*'   # e.g. 0.1.0

permissions:
  contents: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    name: build (${{ matrix.goos }}/${{ matrix.goarch }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - { goos: linux,   goarch: amd64, ext: "",   archive: tar.gz }
          - { goos: linux,   goarch: arm64, ext: "",   archive: tar.gz }
          - { goos: darwin,  goarch: amd64, ext: "",   archive: tar.gz }
          - { goos: darwin,  goarch: arm64, ext: "",   archive: tar.gz }
          - { goos: windows, goarch: amd64, ext: ".exe", archive: zip }

    env:
      CGO_ENABLED: "0"
      VERSION: ${{ github.ref_name }}
      SHORT_SHA: ${{ github.sha.substr(0,7) }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'
          cache: true

      - name: Download modules
        run: go mod download

      # --- Trivy FS scan (fails on HIGH/CRITICAL) ---
      - name: Trivy filesystem scan
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: fs
          scanners: vuln,secret
          vuln-type: os,library
          ignore-unfixed: true
          severity: CRITICAL,HIGH
          exit-code: '1'
          format: table
          skip-dirs: dist
          # Equivalent to: trivy fs --scanners vuln,secret --vuln-type os,library --severity CRITICAL,HIGH --ignore-unfixed --exit-code 1 --skip-dirs dist .

      - name: Build
        run: |
          mkdir -p dist/bin
          OUT="tvrn${{ matrix.ext }}"
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} \
          go build -trimpath \
            -ldflags "-s -w \
              -X main.version=${VERSION} \
              -X main.commit=${SHORT_SHA} \
              -X main.date=$(date -u +%Y-%m-%d)" \
            -o "dist/bin/${OUT}" ./cmd/tvrn

      - name: Package
        run: |
          OS=${{ matrix.goos }}
          ARCH=${{ matrix.goarch }}
          NAME="tvrn_${VERSION}_${OS}_${ARCH}"
          mkdir -p "dist/${NAME}"
          mv dist/bin/* "dist/${NAME}/"
          [ -f LICENSE ] && cp LICENSE "dist/${NAME}/"
          [ -f README.md ] && cp README.md "dist/${NAME}/"
          cd dist
          if [ "${{ matrix.archive }}" = "zip" ]; then
            zip -r "${NAME}.zip" "${NAME}"
          else
            tar -czf "${NAME}.tar.gz" "${NAME}"
          fi
          rm -rf "${NAME}"

      - name: Upload artefact
        uses: actions/upload-artifact@v4
        with:
          name: release-bundles
          path: |
            dist/*.tar.gz
            dist/*.zip

  publish:
    name: publish release
    runs-on: ubuntu-latest
    needs: build
    env:
      VERSION: ${{ github.ref_name }}
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: release-bundles
          path: dist

      - name: Generate checksums
        run: |
          cd dist
          sha256sum * > "tvrn_${VERSION}_SHA256SUMS.txt"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          draft: false
          prerelease: ${{ contains(github.ref_name, '-rc') || contains(github.ref_name, '-beta') || contains(github.ref_name, '-alpha') }}
          generate_release_notes: true
          files: |
            dist/*.tar.gz
            dist/*.zip
            dist/*SHA256SUMS.txt
